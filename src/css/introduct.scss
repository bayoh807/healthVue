@import './all.scss';

#introduction
{
    width: 100%;
    max-height: 25vmin;
    margin: 5vmin 0;
    box-sizing : border-box; 
    padding: 2vmin 3vmin;
    display: flex;
    
    #avatar{
        width: 6rem;
        min-width: 20vmin;
        max-width: 25vmin;
        text-align: center;

  
        img{
            width: 100%;
            border-radius: 50%;
        }
    }

    #avatar_content
    {

        color: white;
        width: inherit;
        height: inherit;
        box-sizing : border-box; 
        padding: 1vmin 0vmin 1vmin 3vmin;

        #title{
            height: 100%;
            display: flex;
            flex-direction: column;
            justify-content: space-around;

            h1{
                @include fontSet(7vmin,400);
                span{
                    @include spacing();
                }
            }
            
            h2{
                @include fontSet(3vmin,400,4vmin);
                @include spacing(0.2rem);
            }
        }

   
    }
}
.container
{
    // overflow: hidden;
    #slider_content{
        width: 100%;
        // display: flex;
        // overflow-x:auto;
        // overflow-y:hidden;
        box-sizing : border-box; 
        // padding: 0 4vmin;

        .slider{
            background: linear-gradient(223deg, #244066, #eef2f7);
            background-size: 400% 400%;
            width: 84vmin;
            height: 50vmin;
            // background: url('./component/formBorder.png') no-repeat;
            background: url('./../../media/component/formBorder.png') no-repeat;
            // background-size : contain ;
            background-size : 84vmin 50vmin ;
            flex-shrink:0;
            box-sizing : border-box; 
            padding: 0 auto;
            // animation: fadeUpIn 5s ease-in-out;
            animation-name: fadeUpIn;/*跟這個標籤(#square)說要執行的動畫名字*/
            animation-duration: 3s;/*跟標籤(#square)說這個動畫要跑多久，我設定1秒即是我完成這個動畫需要1秒的時間*/
            animation-iteration-count: 1; /*跟標籤(#square)說這個動畫要執行幾次，1就是執行1次不會重複*/

            .fromQuestion
            {
                width: 100%;
                height: inherit;
                color : white;
                display: flex;
                flex-direction: column;
                align-items: center;
    

                .homeTitle 
                {
                    letter-spacing: 4px;
                    display: flex;
                    flex-direction: column;
                    align-items: center;
                    // display: inline-flex;
                    // flex-direction: column;
                    // justify-content: space-between;
                    width: 80%;
                    //文字左右對齊填滿
                    // display:block; 
                    // text-align:justify;
                    // text-align-last:justify;
                    // text-justify: inter-ideograph; // 这行必加，兼容ie浏览器



                }

                .homeInput
                {
                    width: 80%;
                    display: flex;
                    flex-direction: row;
                    justify-content: space-between;

                    .inputRadio
                    {
                        display: none;
                    }
                    .formButton{
                        display: contents;
                        cursor: pointer;
                        letter-spacing: 6px;
                        display:block; 
                        text-align:justify;
                        text-align-last:justify;
                        width: 19vmin;
                        font-size: 4vmin;
                        padding: 10px  10px 10px 15px;
                        box-sizing : border-box; 
                        background: url('./../../media/component/radioButton.png') no-repeat;
                        background-size: contain;
                        
                    }
                }
            }
        }
        
    }

    
    #slider_content::-webkit-scrollbar {
        /*隱藏滾輪*/
        display: none;
    }
}

@keyframes fadeUpIn  {
    0% {
        /*要讓他往右移，所以使用translateX屬性*/
        /*opacity的意思是透明度*/
        /*這邊先設定動畫初始值*/
        // transform: translateX(-100px);
        opacity: 0.2;
    }
    100% {
        // transform: translateX(0);
        opacity: 1;
    }


    // 0% {
    //     opacity: 0;
    //     transform: translate3d(10vmin, 0, 0);
    //   }
    
    //   100% {
    //     opacity: 1;
    //     transform: none;
    //   }
}


@keyframes TopToIn  {
    0% {
        display: none;
        /*要讓他往右移，所以使用translateX屬性*/
        /*opacity的意思是透明度*/
        /*這邊先設定動畫初始值*/
        // transform: translateX(-100px);
        transform: translate(0, -100%);
        opacity: 0.2;
    }
    50% {
        /*要讓他往右移，所以使用translateX屬性*/
        /*opacity的意思是透明度*/
        /*這邊先設定動畫初始值*/
        // transform: translateX(-100px);
        opacity: 0.8;
    }

    100% {
        // transform: translateX(0);
        transform: translate(0, 0%);
        opacity: 1;
    }
}

@keyframes RightToIn  {
    0% {
        /*要讓他往右移，所以使用translateX屬性*/
        /*opacity的意思是透明度*/
        /*這邊先設定動畫初始值*/
        // transform: translateX(-100px);
        transform: translate(150%, 0%);
        opacity: 0.2;
    }
    50% {
        /*要讓他往右移，所以使用translateX屬性*/
        /*opacity的意思是透明度*/
        /*這邊先設定動畫初始值*/
        // transform: translateX(-100px);
        opacity: 0.8;
    }
    100% {
        // transform: translateX(0);
        transform: translate(0, 0%);
        opacity: 1;
    }
}

@keyframes contentUpIn  {
    0% {
        /*要讓他往右移，所以使用translateX屬性*/
        /*opacity的意思是透明度*/
        /*這邊先設定動畫初始值*/
        // transform: translateX(-100px);
        opacity: 0;
    }
    50% {
        opacity: 0;
    }
    // 60% {
    //     opacity: 0.2;
    // }
    // 70% {
    //     opacity: 0.4;
    // }
    // 80% {
    //     opacity: 0.6;
    // }
    // 90% {
    //     opacity: 0.8;
    // }
    100% {
        // transform: translateX(0);
        opacity: 1;
    }


    // 0% {
    //     opacity: 0;
    //     transform: translate3d(10vmin, 0, 0);
    //   }
    
    //   100% {
    //     opacity: 1;
    //     transform: none;
    //   }
}